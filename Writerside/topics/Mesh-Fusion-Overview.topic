<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
        SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd"
       title="Overview" id="Mesh-Fusion-Overview">

    <title>Overview</title>

    <chapter title="About" id="mesh-fusion-about">

        <p>Unions multiple meshes into a single mesh (a process known as &quot;mesh fusion&quot;). This is especially
            useful when preparing large 3D models for rendering in a web browser as it requires only a single
            draw call.</p>
        <chapter title="Advantages and disadvantages" id="mesh-fusion-advantages-and-disadvantages">
            <procedure title="Advantages" id="mesh-fusion-advantages">
                <step>
                    Increasing renderer performance.
                </step>
                <step>
                    В целом быстрее записывается и читается программами (нет вложенного парсинга)
                </step>
                <step>
                    Может храниться в разделяемой памяти и быть использована многими процессами, что может сильно
                    увеличить производительность бекенд генератора, делая его полностью параллельным
                </step>
            </procedure>
            <procedure title="Disadvantages" id="mesh-fusion-disadvantages">
                <step>

                    <format style="bold" color="WhiteSmoke">Большой вес</format>
                    <p switcher-key="short,long">

                        В следствии редуцирования количества объектов,больше не получется использовать
                        трансформации, для легкого добавления инстансов. </p>
                    <p switcher-key="long" id="">Не смотря на то, что инстансы на практике
                        требуют почти той-же нагрузки на рендер что и разные объекты, их использование позволяет
                        значительно снизить вес самой геометрии.
                    </p>

                    <p switcher-key="long">
                        Хорошим решением для вас может стать использование сжатия draco. union_mesh индексирует
                        точки
                        и ориентируется именно на них при обратном разборе, это значит что вам не нужно сохранять
                        точный порядок вершин и вы можете пользоваться всеми приимуществами draco. Тем не менее драко
                        требует чтобы mesh была проиндексирована, чего может не быть во многих моделях.

                    </p>


                </step>
                <step>
                    <format style="bold" color="WhiteSmoke">Потеря иерархии объектов</format>
                </step>
                <step>
                    <format style="bold" color="WhiteSmoke">Сложная реализация декодера</format>
                </step>
            </procedure>

        </chapter>

    </chapter>


</topic>