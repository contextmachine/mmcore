[build-system]
requires = ["poetry-core", "cython", "numpy", "setuptools", "pytest", "pyMSVC;sys_platform=='win32'"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "mmcore"
version = "0.53.0"
description = "mmcore"
authors = ["Andrew Astakhov <sthv.developer@gmail.com>", ]
license = "Apache License Version 2.0"
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
numpy = { version = "^2.0.2" }
earcut = { version = "^1.1.5" }
scipy = [
{ version = "<=1.13", markers = "python_version < '3.10'" },
{ version = ">1.13", markers = "python_version >= '3.10'" }
]
pyquaternion = "^0.9.9"
more-itertools = "^10.1.0"
steputils = "^0.1"
# Optional Deps
ipython = { version = "*", optional=true}
plotly = { version = "*", optional=true}
pyrr = { version = "*", optional=true}
glfw = { version = "*", optional=true}
pyopengl = { version = "*", optional=true}
rhino3dm = { version = "^8.9.0", optional=true}
torch = { version = "*", optional=true}

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.2"
matplotlib = { version = "^3.8.3", optional = true }
pydoc-markdown = {version = "^4.8.2", optional = true}
ipython = {version = "*", optional = true}
cython = "*"
cython-lint = "*"
python-dotenv = "^1.0.0"
setuptools="*"

[tool.poetry.build]
generate-setup-file = false
script = 'build.py'

[tool.poetry.plugins."mmcore.renderer"]
renderer = "mmcore.renderer"
[tool.poetry.plugins."mmcore.rhino"]
rhino = "mmcore.rhino"
[tool.poetry.plugins."mmcore.torch"]
torch = "mmcore.torch"

[tool.poetry.extras]
torch=["torch"]
rhino=["rhino3dm","mmcore.rhino"]
renderer = ["plotly", "kaleido", "pyopengl", "pyrr",'glfw', "mmcore.renderer"]
all = ["plotly", "kaleido", "pyopengl", "pyrr",'glfw', "ipython", "rhino3dm", "torch"]


[tool.black]
line-length = 140
target-version = ['py39', 'py310', 'py311', 'py312', 'py313']
include = '\.pyi?$'
exclude = '''
/(
    .git
  | .github
  | gen
  | .idea
  | .svn
  | .hg
  | .mypy_cache
  | .tox
  | .nox
  | .venv
  | _build
  | buck-out
  | build
  | dist
  | .computer_use_demo
  | _build
  | buck-out
  | build
  | dist
)/
'''


[tool.cython-lint]
max-line-length = 140
ignore = ['E503', 'E504']