#!/usr/bin/python3
import multiprocessing
import subprocess as sp
import time
from typing import ContextManager

multiprocessing.Process()


class LaunchRhino(ContextManager):
    def __init__(self, *args, addr="/Applications/RhinoWIP.app/Contents/MacOS/Rhinoceros", timeout=600, **kwargs):
        self.addr = addr
        self.args = args
        self.timeout = timeout
        self.__dict__ |= kwargs

        self.proc = multiprocessing.Process(target=self._start)

    def __enter__(self):
        self.proc.start()
        time.sleep(5.000)
        return self

    def _start(self):
        self.rh = sp.Popen((self.addr,) + self.args, stdout=sp.PIPE, stderr=sp.PIPE)

    def __exit__(self, exc_type, exc_val, exc_tb):
        super().__exit__(exc_type, exc_val, exc_tb)
        self.proc.terminate()


