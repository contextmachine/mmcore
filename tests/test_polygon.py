import timeit
import unittest
from unittest import TestCase
from mmcore.geom.features import points_order, PointsOrder
from mmcore.geom.intersections.predicates import point_in_polygon
import numpy as np


class TestPolyCurve(TestCase):
    def setUp(self) -> None:
        self.poly = np.array(
                [(-16.250000000000007, 5.7142857142857153, 0.0), (-29.107142857142865, -12.821428571428578, 0.0),
                 (-22.107142857142865, -17.500000000000011, 0.0), (-16.785714285714292, -9.5000000000000036, 0.0),
                 (-19.571428571428577, -7.6785714285714324, 0.0), (-21.500000000000007, -10.535714285714292, 0.0),
                 (-20.527030937896029, -11.148001758585359, 0.0), (-18.930802378528856, -8.9111571248884225, 0.0),
                 (-18.121908304484705, -9.2898635367859725, 0.0), (-20.108748740781017, -11.944346710785094, 0.0),
                 (-22.240379168386372, -10.697544007846114, 0.0), (-19.851344311787162, -7.0375747830897462, 0.0),
                 (-13.797063385575498, -10.871944712287775, 0.0), (-15.688828302804822, -8.2226219203237232, 0.0),
                 (-8.6703103530578627, 1.6766880525849430, 0.0), (-16.250000000000007, 5.7142857142857153, 0.0)]
                )
        self.test_points = np.array(
                [(-21.905175622880567, -10.649166955441833, 0.0), (-21.062054800314989, -10.657120925466037, 0.0),
                 (-20.012130757120122, -10.637236000405530, 0.0), (-18.445198662352020, -10.573604240211900, 0.0),
                 (-17.318886163291392, -8.0430579760886580, 0.0), (-15.804946635333270, -8.7671160111990645, 0.0),
                 (-14.525046068218915, -8.1161951513523363, 0.0), (-24.032878852496971, -11.290348557795937, 0.0),
                 (-25.612641838192403, -13.894031997182854, 0.0), (-20.814843140895167, -12.453229644488408, 0.0),
                 (-20.120039975890233, -6.3609029450240762, 0.0), (-25.658282089333944, -6.0048922685833901, 0.0),
                 (-27.877506765997559, -14.547925315916789, 0.0), (-17.375905917503733, -8.8960557582359403, 0.0),
                 (-19.005404146602931, -18.577192295824968, 0.0), (-23.201628344413784, -18.747597339390893, 0.0)]
                )

    def test_order(self):
        self.assertTrue(points_order(self.poly) == PointsOrder.CCW)
        self.assertTrue(points_order(np.flip(self.poly, axis=0)) == PointsOrder.CW)

    def test_point_inside(self):
        self.assertTrue(np.all(point_in_polygon(self.poly, self.test_points) == np.array(
                [False, True, False, True, True, True, False, True, True, True, True, False, False, False, False,
                 False], bool
                )
                               )
                        )
